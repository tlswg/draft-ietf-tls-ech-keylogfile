



Transport Layer Security                                    Y. Rosomakho
Internet-Draft                                                   Zscaler
Intended status: Informational                               28 May 2024
Expires: 29 November 2024


          SSLKEYLOGFILE extensions for Encrypted Client Hello
               draft-rosomakho-tls-ech-keylogfile-latest

Abstract

   This document specifies an extension to the SSLKEYLOGFILE format
   [I-D.ietf-tls-keylogfile] to support the logging information about
   Encrypted Client Hello (ECH) [I-D.ietf-tls-esni] related secrets.
   Specifically, it introduces two new labels: ECH_SECRET and
   ECH_CONFIG, which respectively log the HPKE [RFC9180] shared secret
   and the ECHConfig used for the ECH.  This extension aims to
   facilitate debugging and analysis of TLS connections employing ECH.

About This Document

   This note is to be removed before publishing as an RFC.

   The latest revision of this draft can be found at
   https://yaroslavros.github.io/tls-ech-keylog/draft-rosomakho-tls-ech-
   keylogfile.html.  Status information for this document may be found
   at https://datatracker.ietf.org/doc/draft-rosomakho-tls-ech-
   keylogfile/.

   Discussion of this document takes place on the Transport Layer
   Security Working Group mailing list (mailto:tls@ietf.org), which is
   archived at https://mailarchive.ietf.org/arch/browse/tls/.  Subscribe
   at https://www.ietf.org/mailman/listinfo/tls/.

   Source for this draft and an issue tracker can be found at
   https://github.com/yaroslavros/tls-ech-keylog.

Status of This Memo

   This Internet-Draft is submitted in full conformance with the
   provisions of BCP 78 and BCP 79.

   Internet-Drafts are working documents of the Internet Engineering
   Task Force (IETF).  Note that other groups may also distribute
   working documents as Internet-Drafts.  The list of current Internet-
   Drafts is at https://datatracker.ietf.org/drafts/current/.

   Internet-Drafts are draft documents valid for a maximum of six months
   and may be updated, replaced, or obsoleted by other documents at any
   time.  It is inappropriate to use Internet-Drafts as reference
   material or to cite them other than as "work in progress."

   This Internet-Draft will expire on 29 November 2024.

Copyright Notice

   Copyright (c) 2024 IETF Trust and the persons identified as the
   document authors.  All rights reserved.

   This document is subject to BCP 78 and the IETF Trust's Legal
   Provisions Relating to IETF Documents (https://trustee.ietf.org/
   license-info) in effect on the date of publication of this document.
   Please review these documents carefully, as they describe your rights
   and restrictions with respect to this document.  Code Components
   extracted from this document must include Revised BSD License text as
   described in Section 4.e of the Trust Legal Provisions and are
   provided without warranty as described in the Revised BSD License.

Table of Contents

   1.  Introduction
   2.  Conventions and Definitions
   3.  SSLKEYLOGFILE Labels for ECH
     3.1.  ECH_SECRET
     3.2.  ECH_CONFIG
   4.  Client_random for other TLS 1.3 SSLKEYLOGFILE entries
   5.  Security Considerations
   6.  IANA Considerations
   7.  References
     7.1.  Normative References
     7.2.  Informative References
   Acknowledgments
   Author's Address

1.  Introduction

   The SSLKEYLOGFILE format, used for information about the secrets used
   in a TLS connection, is instrumental in debugging and analyzing TLS
   traffic.  With the introduction of Encrypted Client Hello (ECH),
   additional secret is used during the handshake process.  This
   document extends the SSLKEYLOGFILE format to include relevant
   information to decrypt ECH extension, enabling comprehensive analysis
   of ECH-enabled connections.  This document also clarifies logging of
   TLS 1.3 secrets if ECH was successfully negotiated.

   Proposed extensions can also be used with all protocols that support
   ECH including TLS 1.3 [RFC8446], DTLS 1.3 [RFC9147] and QUIC
   [RFC9000][RFC9001].

2.  Conventions and Definitions

   The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT",
   "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and
   "OPTIONAL" in this document are to be interpreted as described in
   BCP 14 [RFC2119] [RFC8174] when, and only when, they appear in all
   capitals, as shown here.

3.  SSLKEYLOGFILE Labels for ECH

   This document defines two new labels for SSLKEYLOGFILE format:
   ECH_SECRET and ECH_CONFIG.  Client SHOULD log those labels if it
   offered ECH regardless of server acceptance.  Server can log those
   labels only if it decrypted and accepted ECH from the client.  The
   32-byte Random from the Outer ClientHello message is used as
   client_random for these log records.  Client MUST NOT log those
   labels for connections that use GREASE ECH extension.

3.1.  ECH_SECRET

   This label corresponds to KEM shared secret derived during HPKE key
   schedule process.  Length of the secret is defined by KEM that was
   used for ECH.

3.2.  ECH_CONFIG

   This label is used to log ECHConfig that was used for construction of
   ECH extension.  Note that the value is logged in hexadecimal,
   similarly to other entries in SSLKEYLOGFILE.

4.  Client_random for other TLS 1.3 SSLKEYLOGFILE entries

   SSLKEYLOGFILE is using Random from ClientHello as the connection
   identifier.  This creates ambiguity since TLS handshake with ECH
   contains two different Random values in Outer ClientHello and Inner
   ClientHello.

   SSLKEYLOGFILE entries corresponding to TLS 1.3 secrets for
   connections that successfully negotiated ECH MUST use Random from
   Inner ClientHello.  In all other cases Random from Outer ClientHello
   is to be used.

5.  Security Considerations

   Access to ECH_SECRET record in SSLKEYLOGFILE allows attacker to
   decrypt ECH extension and defeat privacy benefits offered by the ECH.
   Security considerations described in SSLKEYLOGFILE are fully
   applicable to this extension.

   Ability to log KEM shared secret from HPKE key schedule introduces
   potential attack surface against HPKE process.  Implementers need to
   secure relevant APIs accordingly to ensure that no unauthorised party
   can extract the KEM shared secret.

6.  IANA Considerations

   This document has no IANA actions.

7.  References

7.1.  Normative References

   [I-D.ietf-tls-esni]
              Rescorla, E., Oku, K., Sullivan, N., and C. A. Wood, "TLS
              Encrypted Client Hello", Work in Progress, Internet-Draft,
              draft-ietf-tls-esni-18, 4 March 2024,
              <https://datatracker.ietf.org/doc/html/draft-ietf-tls-
              esni-18>.

   [I-D.ietf-tls-keylogfile]
              Thomson, M., "The SSLKEYLOGFILE Format for TLS", Work in
              Progress, Internet-Draft, draft-ietf-tls-keylogfile-02, 29
              April 2024, <https://datatracker.ietf.org/doc/html/draft-
              ietf-tls-keylogfile-02>.

   [RFC2119]  Bradner, S., "Key words for use in RFCs to Indicate
              Requirement Levels", BCP 14, RFC 2119,
              DOI 10.17487/RFC2119, March 1997,
              <https://www.rfc-editor.org/rfc/rfc2119>.

   [RFC8174]  Leiba, B., "Ambiguity of Uppercase vs Lowercase in RFC
              2119 Key Words", BCP 14, RFC 8174, DOI 10.17487/RFC8174,
              May 2017, <https://www.rfc-editor.org/rfc/rfc8174>.

7.2.  Informative References

   [RFC8446]  Rescorla, E., "The Transport Layer Security (TLS) Protocol
              Version 1.3", RFC 8446, DOI 10.17487/RFC8446, August 2018,
              <https://www.rfc-editor.org/rfc/rfc8446>.

   [RFC9000]  Iyengar, J., Ed. and M. Thomson, Ed., "QUIC: A UDP-Based
              Multiplexed and Secure Transport", RFC 9000,
              DOI 10.17487/RFC9000, May 2021,
              <https://www.rfc-editor.org/rfc/rfc9000>.

   [RFC9001]  Thomson, M., Ed. and S. Turner, Ed., "Using TLS to Secure
              QUIC", RFC 9001, DOI 10.17487/RFC9001, May 2021,
              <https://www.rfc-editor.org/rfc/rfc9001>.

   [RFC9147]  Rescorla, E., Tschofenig, H., and N. Modadugu, "The
              Datagram Transport Layer Security (DTLS) Protocol Version
              1.3", RFC 9147, DOI 10.17487/RFC9147, April 2022,
              <https://www.rfc-editor.org/rfc/rfc9147>.

   [RFC9180]  Barnes, R., Bhargavan, K., Lipp, B., and C. Wood, "Hybrid
              Public Key Encryption", RFC 9180, DOI 10.17487/RFC9180,
              February 2022, <https://www.rfc-editor.org/rfc/rfc9180>.

Acknowledgments

   TODO acknowledge.

Author's Address

   Yaroslav Rosomakho
   Zscaler
   Email: yrosomakho@zscaler.com
